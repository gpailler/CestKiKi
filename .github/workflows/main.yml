name: Azure functions workflow
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  CONFIGURATION: 'Release'
  SRC_PATH: ${{ github.workspace }}\src\
  PUBLISH_PATH: ${{ github.workspace }}\publish\
  # SONAR_TOKEN: ''  # Stored in the Actions secrets
  # AZURE_FUNCTIONAPP_NAME: '' # Stored in the Actions secrets
  # AZURE_FUNCTIONAPP_PUBLISH_PROFILE: '' # Stored in the Actions secrets

jobs:
  build:
    name: Build and Tests ‚öôÔ∏èüß™üì¶
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # Full history for SonarScanner

    - name: Configure Nuget dependencies caching
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Install SonarScanner
      run: dotnet tool install --global dotnet-sonarscanner

    - name: Install dependencies
      run: dotnet restore ${{ env.SRC_PATH }}

    - name: Start SonarScanner
      run: >
        dotnet sonarscanner begin
        /o:"gpailler"
        /k:"gpailler_CestKiKi"
        /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        /d:sonar.host.url="https://sonarcloud.io"
        /d:sonar.cs.opencover.reportsPaths="${{ github.workspace }}\coverage.opencover.xml"

    - name: Run build
      run: >
        dotnet build ${{ env.SRC_PATH }}
        --configuration ${{ env.CONFIGURATION }}
        --no-restore
        --no-incremental

    - name: Run tests
      run: >
        dotnet test ${{ env.SRC_PATH }}CestKiki.AzureFunctions.Tests\
        --configuration ${{ env.CONFIGURATION }}
        --no-restore
        --no-build
        --collect:"XPlat Code Coverage"
        -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover

    - name: Stop SonarScanner and send analysis
      run: |
        Move-Item "${{ env.SRC_PATH }}CestKiki.AzureFunctions.Tests\TestResults\*\coverage.opencover.xml" "${{ github.workspace }}" -Force
        $env:JAVA_HOME=$env:JAVA_HOME_17_X64 # Force JAVA_HOME environment variable (Version 11 or 17 is required by SonarScanner)
        dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

    - name: Run publish
      run: >
        dotnet publish ${{ env.SRC_PATH }}
        --configuration ${{ env.CONFIGURATION }}
        --output ${{ env.PUBLISH_PATH }}

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: function-app
        path: ${{ env.PUBLISH_PATH }}

  deploy:
    name: Deploy to Azure üöÄüåê
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: windows-latest
    needs: [ build ]

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
          name: function-app
          path: ${{ env.PUBLISH_PATH }}

    - name: Publish Azure Functions
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ secrets.AZURE_FUNCTIONAPP_NAME }}
        package: '${{ env.PUBLISH_PATH }}'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
